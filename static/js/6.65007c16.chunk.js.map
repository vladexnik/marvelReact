{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/service.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","error","style","display","width","height","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","setError","_useState5","_useState6","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getComic","_ref3","_callee3","_context3","_transformComics","_x2","getAllComics","_ref4","_callee4","_args4","_context4","getCharacterByName","_ref5","_callee5","name","character","_context5","_x3","comics","_comics$textObjects$","pageCount","title","description","price","prices","thumbnail","path","extension","homepage","urls","language","textObjects","slice","wiki","items","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","this","setState","console","log","children","props","Component","AppBanner","_jsxs","className","avengers","alt","avengersLogo","setContent","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","setOffset","setNewItemLoading","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","imgStyle","tabIndex","Link","to","renderComics","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/6.65007c16.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\n\nconst ErrorMessage=()=>{\n    return(\n        <img src={error} style={ {display: 'block', width: '250px', height:'250px', margin: '0 auto'} } />\n    )\n} \n// from public\n\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook'\n\n\nconst useMarvelService=()=> {\n\n    const {loading,request,error,clearError, process,setProcess}=useHttp();\n    const _apiBase='https://gateway.marvel.com:443/v1/public/';\n    const _apiKey='apikey=ee08e659fe8dbd136caf78ed92338ca2'    \n    const _baseOffset='291';\n\n\n        // request  вместо getResource \n        const getAllCharacters=async (offset=_baseOffset)=>{\n            const res=await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n            return res.data.results.map(_transformCharacter);\n        }\n       \n        const getCharacter= async (id)=>{\n            const res=await request(`${_apiBase}characters/${id}?${_apiKey}`);\n            \n            return _transformCharacter(res.data.results[0]);\n        }\n\n        const getComic = async (id) => {\n            const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        \n            return _transformComics(res.data.results[0]);\n        };\n\n        const getAllComics=async (offset='33')=>{\n            const res=await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n            return res.data.results.map(_transformComics);\n        }\n\n        const getCharacterByName=async (name)=>{\n            const res=await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n            let character=(res.data.results.map(_transformCharacter));\n            return character; // [{}]\n        }\n\n       \n\n        const _transformComics=(comics)=>{\n            return {\n                pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No info about number of pages',\n                id: comics.id,\n                title: comics.title,\n                description: comics.description || 'Theres no description',\n                price: comics.prices[0].price ? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n                thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n                homepage: comics.urls[0].url,\n                language: comics.textObjects[0]?.language || \"en-us\",\n            }\n        }\n\n        // const getCharacterApi=()=>{\n        //     return request('https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=291&apikey=ee08e659fe8dbd136caf78ed92338ca2')\n        // }\n\n        const _transformCharacter=(character)=>{\n            \n            if(character.description===''){\n                character.description='This person has no description';\n            }\n            if(character.description.length>200){\n                character.description=character.description.slice(0,210)+'...';\n            }\n            return {\n                id: character.id,\n                name:character.name,\n                description: character.description,\n                thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n                homepage: character.urls[0].url,\n                wiki: character.urls[1].url,\n                comics: character.comics.items           \n            }     \n        }\n\n        return {\n            loading, error, clearError, process,setProcess, \n            getAllCharacters, getCharacter, getAllComics, \n            getComic,getCharacterByName\n        }\n}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp=()=>{\r\n    const [loading, setLoading]=useState(false);\r\n    const [error,setError]=useState(null);\r\n    const [process,setProcess]=useState('waiting');\r\n\r\n    const request = useCallback(async (url,\r\n        method='GET',\r\n        body=null, \r\n        headers={'Content-Type': 'application/json'})=>{\r\n            \r\n            setLoading(true);\r\n            setProcess('loading');\r\n            \r\n\r\n            try{\r\n                const response=await fetch(url, {method, body, headers});\r\n                if (!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n                }\r\n\r\n                const data=await response.json();\r\n                setLoading(false);\r\n                // setProcess('confirmed'); ошибка, тк опреация асинхр\r\n                return data;\r\n\r\n            } catch(e){\r\n                setLoading(false);\r\n                setError(e.message);\r\n                setProcess('error');\r\n                throw e;\r\n            }\r\n\r\n        },[]);\r\n\r\n        const clearError=useCallback(()=>{\r\n            setError(null);\r\n            setProcess('loading');\r\n        },[]);\r\n        return { loading, request, error,clearError, process,setProcess} \r\n\r\n}","import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state={\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error){\r\n    //     return {\r\n    //         error: true\r\n    //     } \r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        this.setState({\r\n            error: true\r\n        })\r\n        console.log(errorInfo)\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error){\r\n            return <h2>Somth went wrong </h2>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './comicsList.scss';\n\nimport {useState, useEffect} from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/service';\nimport { Link } from 'react-router-dom';\n\nconst setContent=(process, Component, newItemLoading)=>{\n    switch(process){\n        case 'waiting':\n            return <Spinner/>;\n            break;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n            break;\n        case 'confirmed':\n            return <Component/>;\n            break;\n        case 'error':\n            return <ErrorMessage/>;\n            break;\n        default: \n            throw new Error('unexpected process state');\n\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList,setComicsList]=useState([]);\n    const [offset, setOffset] = useState(55);\n    const [newItemLoading,setNewItemLoading]=useState(false);\n    const [comicsEnded,setComicsEnded]=useState(false);\n\n\n    const {getAllComics, process, setProcess}=useMarvelService();\n\n    useEffect(()=>  {\n        onRequest(offset);\n    },[]);\n    \n//////    \n\n    const onRequest=(offset,initial)=>{\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(()=> setProcess('confirmed'))\n            .then(res=> console.log(res))\n    }\n\n    const onComicsListLoaded=(newComicsList)=>{\n        let ended=false;\n        if(newComicsList.length<8) {\n            ended=true;\n        }\n\n        setComicsList(comicsList=> [...comicsList, ...newComicsList]); // важно что было в предыд charList\n        setNewItemLoading(false)\n        setOffset(offset=>offset+4)\n        setComicsEnded(ended)\n    } \n\n    function renderComics(arr){\n        const items=arr.map((item,i)=>{\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return(\n                <li className=\"comics__item\"\n                    tabIndex={0}\n                    key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} style={imgStyle} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )   \n    });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n        return(\n            <div className=\"comics__list\">\n                 {setContent(process, ()=> renderComics(comicsList), newItemLoading)}\n\n                <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    onClick={()=> onRequest(offset)}\n                    style={{'display': comicsEnded ? 'none' : 'block'}}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )    \n}\n\nexport default ComicsList;","\r\nimport { Helmet } from \"react-helmet\";\r\nimport AppBanner from \"../../components/appBanner/AppBanner\"\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\n\r\n\r\nconst ComicsPage=()=>{\r\n\r\n    return(\r\n        <>\r\n        <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with lists of our comucs\"\r\n            />\r\n            <title>Comics Page</title>\r\n        </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}