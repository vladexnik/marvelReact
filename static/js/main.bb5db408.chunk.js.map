{"version":3,"sources":["resources/img/load.gif","components/spinner/Spinner.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["Spinner","_jsx","className","children","src","heart","style","margin","background","display","AppHeader","_jsxs","Link","to","NavLink","end","_ref","color","isActive","_ref2","Page404","lazy","MainPage","ComicsPage","SingleComicPage","SingleCharPage","App","Router","Suspense","fallback","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"iGAAe,UAA0B,iC,OCqE1BA,IAnED,WACV,OACIC,cAAA,OAAKC,UAAU,UAASC,SACpBF,cAAA,OAAKG,IAAKC,EAAOC,MAAO,CAACC,OAAQ,SAAUC,WAAY,OAAQC,QAAS,YA8DpF,C,+ICvCeC,EAzBG,WACd,OACIC,eAAA,UAAQT,UAAU,cAAaC,SAAA,CAC3BF,cAAA,MAAIC,UAAU,aAAYC,SACtBQ,eAACC,IAAI,CAACC,GAAG,eAAcV,SAAA,CACnBF,cAAA,QAAAE,SAAM,WAAa,2BAG3BF,cAAA,OAAKC,UAAU,YAAWC,SACtBQ,eAAA,MAAAR,SAAA,CACIF,cAAA,MAAAE,SAAIF,cAACa,IAAO,CACRC,KAAG,EACHT,MAAO,SAAAU,GAAU,MAAO,CAACC,MAARD,EAARE,SAAkC,UAAY,UAAU,EACjEL,GAAG,eAAcV,SAAC,iBAAyB,IAE/CF,cAAA,MAAAE,SAAIF,cAACa,IAAO,CACRR,MAAO,SAAAa,GAAU,MAAO,CAACF,MAARE,EAARD,SAAkC,UAAY,UAAU,EACjEL,GAAG,sBAAqBV,SAAC,oBAKjD,E,OCnBMiB,G,MAAQC,gBAAK,kBAAK,4BAAsB,KACxCC,EAASD,gBAAK,kBAAK,yDAA2B,IAC9CE,EAAWF,gBAAK,kBAAK,kDAA6B,IAClDG,EAAgBH,gBAAK,kBAAK,kDAAkD,IAC5EI,EAAeJ,gBAAK,kBAAK,4BAAgD,IA0BhEK,EAxBL,WAEN,OACIzB,cAAC0B,IAAM,CAAAxB,SACHQ,eAAA,OAAKT,UAAU,MAAKC,SAAA,CAChBF,cAACS,EAAS,IACVT,cAAA,QAAAE,SACIF,cAAC2B,WAAQ,CAACC,SAAU5B,cAAA,QAAMK,MAAO,CAAC,UAAa,UAAUH,SAAC,eAAkBA,SACxEQ,eAACmB,IAAM,CAAA3B,SAAA,CACHF,cAAC8B,IAAK,CAACC,KAAK,eAAeC,QAAShC,cAACqB,EAAQ,MAC7CrB,cAAC8B,IAAK,CAACC,KAAK,sBAAsBC,QAAShC,cAACsB,EAAU,MACtDtB,cAAC8B,IAAK,CAACC,KAAK,mBAAmBC,QAAShC,cAACuB,EAAe,MACxDvB,cAAC8B,IAAK,CAACC,KAAK,sBAAsBC,QAAShC,cAACwB,EAAc,MAC1DxB,cAAC8B,IAAK,CAACC,KAAK,IAAIC,QAAShC,cAACmB,EAAO,iBAO7D,E,MCrBAc,IAASC,OACPlC,cAACmC,IAAMC,WAAU,CAAAlC,SACfF,cAAA,OAAKC,UAAU,YAAWC,SAC1BF,cAACyB,EAAG,QAGNY,SAASC,eAAe,Q","file":"static/js/main.bb5db408.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/load.65c3f468.gif\";","import heart from '../../resources/img/load.gif';\n\nconst Spinner=()=>{\n    return(\n        <div className=\"spinner\">\n            <img src={heart} style={{margin: '0 auto', background: 'none', display: 'block'}}/>\n        </div>\n        // <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n        //     <g transform=\"translate(80,50)\">\n        //     <g transform=\"rotate(0)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n        //     <g transform=\"rotate(45)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(50,80)\">\n        //     <g transform=\"rotate(90)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n        //     <g transform=\"rotate(135)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(20,50.00000000000001)\">\n        //     <g transform=\"rotate(180)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n        //     <g transform=\"rotate(225)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(49.99999999999999,20)\">\n        //     <g transform=\"rotate(270)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n        //     <g transform=\"rotate(315)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g>\n        // </svg>\n    )\n}\n\nexport default Spinner;","import './appHeader.scss';\nimport {Link, NavLink} from \"react-router-dom\";\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/marvelReact\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                        end        \n                        style={({isActive}) => ({color: isActive ? '#9F0013' : 'inherit'})} \n                        to=\"/marvelReact\">Characters</NavLink></li>\n                    /\n                    <li><NavLink  \n                        style={({isActive}) => ({color: isActive ? '#9F0013' : 'inherit'})} \n                        to=\"/marvelReact/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\n// https://stackblitz.com/github/remix-run/react-router/tree/main/examples/basic?file=src%2FApp.tsx\nexport default AppHeader;\n\n","import AppHeader from \"../appHeader/AppHeader\";\n// switch чтоб не повторять то что в Route\n\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport {lazy,Suspense} from 'react';\nimport Spinner from \"../spinner/Spinner\";\nconst Page404=lazy(()=> import('../pages/404'));\nconst MainPage=lazy(()=> import('../pages/MainPage'));\nconst ComicsPage=lazy(()=> import('../pages/ComicsPage'));\nconst SingleComicPage=lazy(()=> import('../pages/singleComicPage/SingleComicPage'));\nconst SingleCharPage=lazy(()=> import('../pages/singleCharPage/SingleCharPage'));\n\nconst App=()=> {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Suspense fallback={<span style={{'textAlign': 'center'}}>Loading...</span>}>\n                        <Routes> \n                            <Route path=\"/marvelReact\" element={<MainPage/>}/>                           \n                            <Route path=\"/marvelReact/comics\" element={<ComicsPage/>}/>\n                            <Route path=\"/comics/:comicId\" element={<SingleComicPage/>} />\n                            <Route path=\"/characters/:charId\" element={<SingleCharPage/>} />\n                            <Route path=\"*\" element={<Page404/>} />\n                        </Routes>\n                    </Suspense>\n                </main>       \n            </div>\n        </Router>\n    )\n}\n\n// https://reactrouter.com/en/6.12.0/components/outlet\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n// const marvelService0=useMarvelService();\n//marvelService0.getAllCharacters().then(res=> console.log(res));\n//marvelService0.getCharacter(1011208).then(res=> console.log(res))\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container\">\n    <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}